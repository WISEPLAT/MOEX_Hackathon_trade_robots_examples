import _ from 'lodash';
import { DeepClient } from '@deep-foundation/deeplinks/imports/client';

const packages = [
  ['@deep-foundation/core', 'User', 'UserId'],
  ['@deep-foundation/core', 'Type', 'TypeId'],
  ['@deep-foundation/core', 'Any', 'AnyId'],
  ['@deep-foundation/core', 'Join', 'JoinId'],
  ['@deep-foundation/core', 'Contain', 'ContainId'],
  ['@deep-foundation/core', 'Value', 'ValueId'],
  ['@deep-foundation/core', 'String', 'StringId'],
  ['@deep-foundation/core', 'Number', 'NumberId'],
  ['@deep-foundation/core', 'Package', 'PackageId'],
  ['@deep-foundation/core', 'Symbol', 'SymbolId'],
  ['@deep-foundation/core', 'SyncTextFile', 'SyncTextFileId'],
  ['@deep-foundation/core', 'dockerSupportsJs', 'dockerSupportsJsId'],
  ['@archer-lotos/bun-js-docker-isolation-provider', 'dockerSupportsBunJs', 'dockerSupportsBunJsId'],
  ['@deep-foundation/core', 'Handler', 'HandlerId'],
  ['@deep-foundation/core', 'HandleInsert', 'HandleInsertId'],
  ['@deep-foundation/core', 'HandleUpdate', 'HandleUpdateId'],
  ['@deep-foundation/core', 'HandleDelete', 'HandleDeleteId'],
  ['@deep-foundation/core', 'Tree', 'TreeId'],
  ['@deep-foundation/core', 'TreeIncludeNode', 'TreeIncludeNodeId'],
  ['@deep-foundation/core', 'TreeIncludeUp', 'TreeIncludeUpId'],
  ['@deep-foundation/core', 'TreeIncludeFromCurrent', 'TreeIncludeFromCurrentId'],
  ['@deep-foundation/core', 'Rule', 'RuleId'],
  ['@deep-foundation/core', 'RuleSubject', 'RuleSubjectId'],
  ['@deep-foundation/core', 'RuleObject', 'RuleObjectId'],
  ['@deep-foundation/core', 'RuleAction', 'RuleActionId'],
  ['@deep-foundation/core', 'Selector', 'SelectorId'],
  ['@deep-foundation/core', 'SelectorInclude', 'SelectorIncludeId'],
  ['@deep-foundation/core', 'SelectorExclude', 'SelectorExcludeId'],
  ['@deep-foundation/core', 'SelectorTree', 'SelectorTreeId'],
  ['@deep-foundation/core', 'containTree', 'containTreeId'],
  ['@deep-foundation/core', 'AllowInsertType', 'AllowInsertTypeId'],
  ['@deep-foundation/core', 'AllowDeleteType', 'AllowDeleteTypeId'],
  ['@deep-foundation/core', 'SelectorFilter', 'SelectorFilterId'],
  ['@deep-foundation/core', 'Query', 'QueryId'],
  ['@deep-foundation/tsx', 'TSX', 'TsxId'],
  ['@deep-foundation/core', 'HandleClient', 'HandleClientId'],
  ['@deep-foundation/core', 'clientSupportsJs', 'clientSupportsJsId'],
  ['deep', 'users', 'usersId'],
  ['@deep-foundation/core', 'PackageNamespace', 'PackageNamespaceId'],
  ['@deep-foundation/core', 'PackageVersion', 'PackageVersionId'],
  ['@deep-foundation/core', 'PackageActive', 'PackageActiveId'],
  ['@deep-foundation/npm-packager', 'Publish', 'PublishId'],
  ['@deep-foundation/core', 'PackageQuery', 'PackageQueryId'],
];

export interface TypesStore {
  UserId: number,
  TypeId: number,
  AnyId: number,
  JoinId: number,
  ContainId: number,
  ValueId: number,
  StringId: number,
  NumberId: number,
  PackageId: number,
  SymbolId: number,
  SyncTextFileId: number,
  dockerSupportsJsId: number,
  dockerSupportsBunJsId: number,
  HandlerId: number,
  HandleInsertId: number,
  HandleUpdateId: number,
  HandleDeleteId: number,
  TreeId: number,
  TreeIncludeNodeId: number,
  TreeIncludeUpId: number,
  TreeIncludeFromCurrentId: number,
  RuleId: number,
  RuleSubjectId: number,
  RuleObjectId: number,
  RuleActionId: number,
  SelectorId: number,
  SelectorIncludeId: number,
  SelectorExcludeId: number,
  SelectorTreeId: number,
  containTreeId: number,
  AllowInsertTypeId: number,
  AllowDeleteTypeId: number,
  SelectorFilterId: number,
  QueryId: number,
  TsxId: number,
  HandleClientId: number,
  clientSupportsJsId: number,
  usersId: number,
  PackageNamespaceId: number,
  PackageVersionId: number,
  PackageActiveId: number,
  PublishId: number,
  PackageQueryId: number,
}

export const createTypesStore = async ({deep}: {deep: DeepClient}) => {
  const ids: [string, number][] = await Promise.all(
    packages.map(async ([module, type, exportName]) => [exportName, await deep.id(module, type)])
  );
  console.log({ids});
  const typesStore: { [k: string]: number; } = Object.fromEntries(ids);
  return typesStore;
};